{
    "openapi": "3.0.0",
    "info": {
        "title": "API Budget Buddy",
        "description": "API Budget Buddy",
        "contact": {
            "name": "Andre Markov",
            "email": "andremarkov@icloud.com"
        },
        "version": "0.0.1"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's name",
                                        "type": "string",
                                        "example": "Swagger API"
                                    },
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "swagger@example.com"
                                    },
                                    "discord_name": {
                                        "description": "Global name in discord",
                                        "type": "string",
                                        "format": "string",
                                        "example": "DiscordName"
                                    },
                                    "password": {
                                        "description": "User's password (min: 8 characters)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate a user and return a token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "swagger@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "remember": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logout the authenticated user by revoking their tokens",
                "operationId": "logout",
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/info/balance": {
            "get": {
                "tags": [
                    "Balance"
                ],
                "summary": "Получить информацию о балансе пользователя",
                "description": "Этот эндпоинт позволяет получить информацию о балансе пользователя, включая среднемесячный доход и среднемесячные траты за последний год.",
                "operationId": "getBalanceInfo",
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "income": {
                                            "description": "Среднемесячный доход за последний год.",
                                            "type": "number",
                                            "format": "float",
                                            "example": "1000.00"
                                        },
                                        "loss": {
                                            "description": "Среднемесячные траты за последний год.",
                                            "type": "number",
                                            "format": "float",
                                            "example": "500.00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Неавторизованный запрос",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/info/running-costs": {
            "get": {
                "tags": [
                    "Balance"
                ],
                "summary": "Получить информацию о текущих расходах",
                "description": "Возвращает информацию о текущих расходах пользователя за выбранный месяц.",
                "operationId": "getRunningCostsInfo",
                "responses": {
                    "200": {
                        "description": "Успешный запрос. Возвращает информацию о текущих расходах пользователя.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dailyExpenses": {
                                            "description": "Сумма расходов за каждый день текущего месяца",
                                            "type": "number"
                                        },
                                        "cumulativeExpensesArray": {
                                            "type": "array",
                                            "items": {
                                                "description": "Массив кумулятивных расходов за каждый день текущего месяца",
                                                "type": "number"
                                            }
                                        },
                                        "incomeAverage": {
                                            "description": "Средний ежемесячный доход за последний год",
                                            "type": "number"
                                        },
                                        "lossAverage": {
                                            "description": "Средние ежемесячные расходы за последний год",
                                            "type": "number"
                                        },
                                        "topPriceItem": {
                                            "description": "Список самых дорогих покупок пользователя за последний месяц",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/receipts/add": {
            "post": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Upload receipts",
                "description": "Метод для загрузки и сохранения квитанций.",
                "operationId": "d30d1884bf0c3f0f629496362ab26e93",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "receipt"
                                ],
                                "properties": {
                                    "receipt": {
                                        "description": "Массив файлов квитанций для загрузки",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Receipt(s) uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Receipt(s) uploaded successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No receipt uploaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No receipt uploaded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/receipts/show": {
            "post": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Получить список чеков пользователя",
                "description": "Этот эндпоинт возвращает список чеков пользователя.",
                "operationId": "getReceipts",
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Receipt"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string"
                                        },
                                        "from": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "last_page_url": {
                                            "type": "string"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "path": {
                                            "type": "string"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "to": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Неавторизованный запрос",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/receipts/delete/{id}": {
            "delete": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Удалить чек",
                "description": "Этот эндпоинт позволяет удалить чек пользователя по его ID.",
                "operationId": "deleteReceipt",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID чека для удаления",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Receipt deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Чек не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Receipt not found or does not belong to the current user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Receipt": {
                "title": "Receipt",
                "description": "Receipt object",
                "properties": {
                    "id": {
                        "description": "ID of the receipt",
                        "type": "integer",
                        "example": 1
                    },
                    "image_path": {
                        "description": "Path to the image of the receipt",
                        "type": "string",
                        "example": "/path/to/image.jpg"
                    },
                    "user_id": {
                        "description": "ID of the user who uploaded the receipt",
                        "type": "integer",
                        "example": 1
                    },
                    "processed": {
                        "description": "Flag indicating whether the receipt has been processed",
                        "type": "boolean",
                        "example": true
                    },
                    "error": {
                        "description": "Flag indicating whether an error occurred during processing",
                        "type": "boolean",
                        "example": false
                    },
                    "annulled": {
                        "description": "Flag indicating whether the receipt has been annulled",
                        "type": "boolean",
                        "example": false
                    },
                    "amount": {
                        "description": "Amount of the receipt",
                        "type": "number",
                        "example": 100.5
                    },
                    "datetime": {
                        "description": "Date and time when the receipt was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-30T12:00:00Z"
                    },
                    "created_at": {
                        "description": "Date and time when the receipt was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-30T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "Date and time when the receipt was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-30T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "discord_name": {
                        "type": "string",
                        "format": "string",
                        "example": "DiscordName"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "http",
                "scheme": "bearer",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}